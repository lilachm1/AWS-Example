stages:
  - package
  - build
  - deploy
  - rollback
services:
  - docker:stable-dind
variables:
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  REGISTRY_URL: registry.gitlab.com/unplugged-systems/up_automation
  DOCKER_BUILD_ID: ${CI_COMMIT_SHORT_SHA}

image: maven:latest
cache:
  paths:
    - .m2/repository
   

Package: 
  stage: package
  tags:
    - runner
  script:
   # - 'mvn package -Dmaven.test.skip=true'
   - 'mvn package'
  artifacts:
    expire_in: 1h
    paths:
      - target/
  only:
    - dev
    - master
  


Build image:
  stage: build
  tags:
    - runner
  image: docker:git
  services:
  - docker:stable-dind
  script:
    - docker login ${REGISTRY_URL} -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}
    - docker build -t ${REGISTRY_URL}:${DOCKER_BUILD_ID} .
    - docker push ${REGISTRY_URL}:${DOCKER_BUILD_ID}
  needs: ["Package"]  
  only:
    - dev
    - master
  when: on_success
  

Deploy DEV:
  stage: deploy 
  tags:
    - runner
  image: bitnami/kubectl:latest
  before_script:
    - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}  
  script:
    - cd deploy/
    - sed -i 's/<VERSION>/'${DOCKER_BUILD_ID}'/g' deployment.yaml
    - kubectl apply -f deployment.yaml 
  needs: 
    - job: Package
      artifacts: true
    - job: Build image
      artifacts: true
  only:
    - dev  
  when: manual  

Rollback DEV:
  stage: rollback
  tags:
    - runner
  image: bitnami/kubectl:latest 
  before_script:
    - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION} 
  script:
    - kubectl rollout undo deployment admin -n up-service
  needs: ["Deploy DEV"]
  only:
    - dev
  when: manual

Deploy UAT:
  stage: deploy
  tags:
    - uat
  image: bitnami/kubectl:latest
  before_script:
    - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    - source $VARIABLES_FILE
    - source $CONTAINER
  script:
    - cd deploy/
    - sed -i 's/<VERSION>/'${CONTAINER_NAME}_${DOCKER_BUILD_ID}_${APP_VERSION}'/g' uat.yaml
    - kubectl apply -f uat.yaml
  needs: 
    - job: Package
      artifacts: true
    - job: Build image
      artifacts: true  
  only:
    - dev  
  when: manual    


Rollback UAT:
  stage: rollback
  tags:
    - uat
  image: bitnami/kubectl:latest 
  before_script:
    - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION} 
  script:
    - kubectl rollout undo deployment admin -n up-service
  needs: ["Deploy UAT"]  
  only:
    - dev
  when: manual

Deploy Prod:
  stage: deploy 
  tags:
    - lab
  image: bitnami/kubectl:latest
  before_script:
    - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
    - source $VARIABLES_FILE
    - source $CONTAINER
  script:
    - cd deploy/
    - sed -i 's/<VERSION>/'${CONTAINER_NAME}_${DOCKER_BUILD_ID}_${APP_VERSION}'/g' prod.yaml
    - kubectl apply -f prod.yaml
  needs: 
    - job: Package
      artifacts: true
    - job: Build image
      artifacts: true   
  only:
    - master
  when: manual    


Rollback Prod:
  stage: rollback
  tags:
    - lab
  image: bitnami/kubectl:latest 
  before_script:
    - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION} 
  script:
    - kubectl rollout undo deployment admin -n up-service 
  needs: ["Deploy Prod"]  
  only:
    - master
  when: manual

